C51 COMPILER V8.02   MAIN                                                                  02/28/2016 17:27:42 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(SIZE) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include<stdio.h>
   3          #include<lcd.h>
   4          #include"serial.h"
   5          #define input P0        //Input port to read the values of ADc
   6          
   7          sbit ale=P1^0;                  //address latch enable
   8          sbit oe=P1^3;                   //output enable
   9          sbit sc=P1^1;                   //start conversion
  10          sbit eoc=P1^2;                  //end of conversion
  11          
  12          sbit ADD_A=P1^4;  // Address pins for selecting input channels.
  13          sbit ADD_B=P1^5;
  14          sbit ADD_C=P1^6; 
  15          
  16          sbit pulse=P3^5;
  17          
  18          sbit sw=P3^6;
  19          unsigned int ps; 
  20          typedef void v;
  21          unsigned char buff[16],buff3[18];
  22          unsigned int x_data,y_data,z_data;
  23          bit a=0,b=0,c=0;
  24          v adc_init();
  25          v adc_set();
  26          void sense(); 
  27          v chan0();
  28          void chan1();
  29          v chan2();
  30          void check();
  31          void check_pulse();     
  32          void gsm(void);
  33          void gsm1(void);
  34          void call();
  35          
  36          void main()
  37          {
  38   1              //adc_init();
  39   1              lcd_init();
  40   1              serial_init();
  41   1              lcd_datastr("Water Distribution");
  42   1              line2();
  43   1              lcd_datastr("System");
  44   1              delay(200);
  45   1              while(1)
  46   1              {
  47   2                      //if()
  48   2                      check_pulse();
  49   2              }
  50   1      }
  51          void check_pulse()
  52          {
  53   1              static int count=0;
  54   1              lcd_clr();
  55   1              lcd_datastr("Scanning....");
C51 COMPILER V8.02   MAIN                                                                  02/28/2016 17:27:42 PAGE 2   

  56   1              delay(100);                     
  57   1              count=0;
  58   1              while(count<30)
  59   1              {
  60   2                      if(pulse==0)
  61   2                      {
  62   3                              ps++;
  63   3                      delay(10);      
  64   3                      }
  65   2                      count++;
  66   2                      lcd_clr();
  67   2                      sprintf(buff,"Time=%d Sec",count);
  68   2                      lcd_datastr(buff);
  69   2                      delay(200);     
  70   2              }       
  71   1              /*if(ps==8 || ps==9 ||  ps==10)
  72   1                              ps*=8;
  73   1                      else if(ps==11 || ps==12 || ps==13)
  74   1                              ps*=6;
  75   1                      else if(ps==14 || ps==15 || ps== 16)
  76   1                              ps*=5;                                                   
  77   1                      else if(ps==17 || ps==18 || ps==19)
  78   1                              ps*=4;*/        
  79   1              /*      if(ps>22 || ps<31)
  80   1                      {
  81   1                      ps=0;
  82   1                      }*/
  83   1                      sprintf(buff,"Pulses=%d",ps);            
  84   1                      delay(200);             
  85   1                      lcd_clr();
  86   1                      lcd_datastr(buff);      
  87   1                      delay(200);
  88   1                      delay(200);
  89   1                      if(ps>80 || ps<65)
  90   1                      {
  91   2                      sprintf(buff3,"Abnormal Beat Rate");
  92   2                      gsm();
  93   2                      }
  94   1                      count=0;
  95   1                      ps=0;
  96   1      
  97   1      }
  98          /*void adc_init()
  99          {
 100                  eoc=1;                          //conversion completed
 101                  ale=0;
 102                  oe=0;
 103                  sc=0;   
 104          }
 105          
 106          v adc_set()
 107          {
 108                   ale=1;
 109                   delay(2);
 110                   sc=1;                                          //conversion start
 111                   delay(1);
 112                   ale=0;
 113                   delay(1);
 114                   sc=0;          
 115                   while(eoc==1);
 116                   while(eoc==0);
 117                   oe=1;
C51 COMPILER V8.02   MAIN                                                                  02/28/2016 17:27:42 PAGE 3   

 118                   if(a==1)                       //temp sensor o/p
 119                   {
 120                          x_data=input;
 121                          x_data*=2;              
 122                          x_data=x_data+17;               
 123                          x_data=100-x_data;
 124                  }
 125                   if(b==1)                       //humi sensor o/p
 126                   {
 127                          y_data=input;
 128                          
 129                  }
 130                    if(c==1)
 131                                  z_data=input;           //ldr
 132                                  //z_data=255-z_data;
 133                   delay(2);
 134                   oe=0;
 135          }
 136          
 137          void sense()
 138          {
 139                          chan0();
 140                          //chan1();
 141                          lcd_clr();
 142                          sprintf(buff,"T=%dC",x_data);
 143                          lcd_datastr(buff);
 144                          delay(150);
 145          
 146          }                                                                
 147          void chan0()
 148          {
 149                          ADD_A=0;                                        //channel 0 select
 150                          ADD_B=0;
 151                          ADD_C=0;
 152                          a=1;
 153                          adc_set();       
 154                          eoc=1;                          //conversion completed
 155                          ale=0;
 156                          oe=0;
 157                          sc=0;
 158                          a=0;
 159          }                                                                
 160          void chan1()
 161          {
 162                          ADD_A=1;                                        //channel 0 select
 163                          ADD_B=0;
 164                          ADD_C=0;
 165                          b=1;
 166                          adc_set();       
 167                          eoc=1;                          //conversion completed
 168                          ale=0;
 169                          oe=0;
 170                          sc=0;
 171                          b=0;
 172          }                                                               
 173          void check()
 174          {
 175                  if(x_data>42)
 176                  {
 177                          sprintf(buff3,"Body Temp Exceeds");
 178                          call();
 179                          delay(50);
C51 COMPILER V8.02   MAIN                                                                  02/28/2016 17:27:42 PAGE 4   

 180                          gsm();
 181                  }
 182          }
 183          void call()
 184          {
 185                          lcd_clr();
 186                          lcd_datastr("Calling");
 187                          transmit_str("ATD");       
 188                          transmit_str("+919075680609");        //Enter mobile number here
 189                          transmit(';');
 190                          transmit(0x0d);
 191                          delay(200);
 192          }*/             
 193          void send(void)
 194          {
 195   1              transmit_str ("AT");
 196   1              transmit(0x0D);
 197   1              delay(200);
 198   1              lcd_clr();
 199   1              lcd_datastr("Msg sending....");
 200   1              transmit_str ("AT+CMGF=1");
 201   1              transmit (0x0D);
 202   1              delay(200);     
 203   1              transmit_str ("AT+CMGS=");
 204   1              transmit('"');
 205   1              transmit_str ("+919075680609");
 206   1              transmit('"');
 207   1              transmit(0x0D);
 208   1              delay(200);     
 209   1              transmit_str (buff3);
 210   1              transmit_str ("\n\r");
 211   1              transmit(0x1A);
 212   1              delay(200);     
 213   1              lcd_clr();
 214   1               lcd_datastr("Msg sent....");
 215   1              delay(200);
 216   1              
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    400    ----
   CONSTANT SIZE    =    148    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
